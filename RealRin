local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local TS = game:GetService("TweenService")

local gui = Instance.new("ScreenGui")
gui.ResetOnSpawn = false
gui.Name = "RinHubPremium"
gui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

-- MAIN WINDOW
local main = Instance.new("Frame")
main.Size = UDim2.new(0, 220, 0, 250)
main.Position = UDim2.new(0.5, -110, 0.5, -125)
main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
main.BackgroundTransparency = 0.3
main.BorderSizePixel = 0
main.ClipsDescendants = true
main.Parent = gui

-- MINIMIZE ICON (WITH SAMPLE IMAGE)
local minimizeIcon = Instance.new("ImageButton")
minimizeIcon.Name = "RinIcon"
minimizeIcon.Size = UDim2.new(0, 60, 0, 60)
minimizeIcon.Position = UDim2.new(0, 20, 1, -80)
minimizeIcon.Image = "rbxassetid://6956135794"  -- Sample valid image ID
minimizeIcon.ImageColor3 = Color3.new(1,1,1)
minimizeIcon.ImageTransparency = 0
minimizeIcon.BackgroundColor3 = Color3.new(0,0,0)
minimizeIcon.BackgroundTransparency = 0.5
minimizeIcon.ScaleType = Enum.ScaleType.Crop
minimizeIcon.Visible = false
minimizeIcon.ZIndex = 10
minimizeIcon.Parent = gui

-- CIRCLE EFFECT
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(1, 0)
corner.Parent = minimizeIcon

-- BORDER
local stroke = Instance.new("UIStroke")
stroke.Color = Color3.new(1,1,1)
stroke.Thickness = 2
stroke.Parent = minimizeIcon

-- HEADER
local header = Instance.new("Frame")
header.Size = UDim2.new(1, 0, 0, 40)
header.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
header.BackgroundTransparency = 0.7
header.Parent = main

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -40, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.Text = "RIN HUB v5"
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.fromRGB(0, 255, 154)
title.TextSize = 16
title.BackgroundTransparency = 1
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = header

-- CLOSE BUTTON
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0.5, -15)
closeBtn.Text = "Ã—"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextColor3 = Color3.fromRGB(255, 50, 50)
closeBtn.TextSize = 24
closeBtn.BackgroundTransparency = 1
closeBtn.Parent = header

-- TOGGLE SWITCH FUNCTION
local function CreateToggle(text, yPosition)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, -20, 0, 30)
    container.Position = UDim2.new(0, 10, 0, yPosition)
    container.BackgroundTransparency = 1
    container.Parent = main

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Text = text
    label.Font = Enum.Font.Gotham
    label.TextColor3 = Color3.fromRGB(200, 200, 200)
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.BackgroundTransparency = 1
    label.Parent = container

    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(0, 50, 0, 25)
    toggleFrame.Position = UDim2.new(1, -50, 0.5, -12.5)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    toggleFrame.Parent = container
    Instance.new("UICorner", toggleFrame).CornerRadius = UDim.new(1, 0)

    local toggleDot = Instance.new("Frame")
    toggleDot.Size = UDim2.new(0, 21, 0, 21)
    toggleDot.Position = UDim2.new(0, 2, 0.5, -10.5)
    toggleDot.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    toggleDot.Parent = toggleFrame
    Instance.new("UICorner", toggleDot).CornerRadius = UDim.new(1, 0)

    local isToggled = false
    local function UpdateToggle()
        local newPos = isToggled and UDim2.new(1, -23, 0.5, -10.5) or UDim2.new(0, 2, 0.5, -10.5)
        TS:Create(toggleDot, TweenInfo.new(0.2), {Position = newPos}):Play()
        TS:Create(toggleFrame, TweenInfo.new(0.2), {BackgroundColor3 = isToggled and Color3.fromRGB(0, 255, 154) or Color3.fromRGB(40, 40, 40)}):Play()
    end

    toggleFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isToggled = not isToggled
            UpdateToggle()
        end
    end)

    return container
end

-- ADD TOGGLES
CreateToggle("Freeze Trade", 50)
CreateToggle("Auto Accept", 90)
CreateToggle("Auto Add Items", 130)

-- ADD BEST FRUIT BUTTON
local fruitBtn = Instance.new("TextButton")
fruitBtn.Size = UDim2.new(1, -20, 0, 35)
fruitBtn.Position = UDim2.new(0, 10, 0, 170)
fruitBtn.Text = "ADD BEST FRUIT"
fruitBtn.Font = Enum.Font.GothamBold
fruitBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
fruitBtn.TextSize = 14
fruitBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 154)
fruitBtn.AutoButtonColor = false
fruitBtn.Parent = main
Instance.new("UICorner", fruitBtn).CornerRadius = UDim.new(0, 6)

-- BUTTON HOVER EFFECTS
fruitBtn.MouseEnter:Connect(function()
    TS:Create(fruitBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 200, 120)}):Play()
end)
fruitBtn.MouseLeave:Connect(function()
    TS:Create(fruitBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 255, 154)}):Play()
end)

-- DRAG SYSTEM
local function InitDrag(target)
    local dragStartPos
    local dragStart
    
    target.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragStartPos = target.Position
            dragStart = input.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragStart = nil
                end
            end)
        end
    end)
    
    target.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragStart then
            local delta = input.Position - dragStart
            target.Position = UDim2.new(
                dragStartPos.X.Scale,
                dragStartPos.X.Offset + delta.X,
                dragStartPos.Y.Scale,
                dragStartPos.Y.Offset + delta.Y
            )
        end
    end)
end

InitDrag(main)
InitDrag(minimizeIcon)

-- MINIMIZE/RESTORE FUNCTION
local function ToggleGUI()
    if main.Visible then
        TS:Create(main, TweenInfo.new(0.3), {
            Size = UDim2.new(0, 0, 0, 0),
            Position = minimizeIcon.Position
        }):Play()
        minimizeIcon.Visible = true
        main.Visible = false
    else
        main.Visible = true
        TS:Create(main, TweenInfo.new(0.3), {
            Size = UDim2.new(0, 220, 0, 250),
            Position = UDim2.new(0.5, -110, 0.5, -125)
        }):Play()
        minimizeIcon.Visible = false
    end
end

closeBtn.MouseButton1Click:Connect(ToggleGUI)
minimizeIcon.MouseButton1Click:Connect(ToggleGUI)
