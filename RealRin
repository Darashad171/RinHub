local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local TS = game:GetService("TweenService")
local RunService = game:GetService("RunService")

-- LOADING SCREEN --
local loadingGui = Instance.new("ScreenGui")
loadingGui.Name = "LoadingScreen"
loadingGui.ResetOnSpawn = false
loadingGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
loadingGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

local loadingFrame = Instance.new("Frame")
loadingFrame.Size = UDim2.new(1, 0, 1, 0)
loadingFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
loadingFrame.BorderSizePixel = 0
loadingFrame.Parent = loadingGui

-- Centered Loading Text
local loadingText = Instance.new("TextLabel")
loadingText.Size = UDim2.new(1, 0, 0, 40)
loadingText.Position = UDim2.new(0.5, 0, 0.5, 0)
loadingText.AnchorPoint = Vector2.new(0.5, 0.5)
loadingText.Text = ""
loadingText.Font = Enum.Font.GothamBold
loadingText.TextColor3 = Color3.fromRGB(0, 255, 150)
loadingText.TextSize = 24
loadingText.TextTransparency = 1
loadingText.BackgroundTransparency = 1
loadingText.TextXAlignment = Enum.TextXAlignment.Center
loadingText.Parent = loadingFrame

-- Spinner
local spinner = Instance.new("ImageLabel")
spinner.Size = UDim2.new(0, 120, 0, 120)
spinner.Position = UDim2.new(0.5, -60, 0.4, -60)
spinner.Image = "rbxassetid://6751070948"
spinner.BackgroundTransparency = 1
spinner.ImageColor3 = Color3.fromRGB(0, 255, 150)
spinner.ImageTransparency = 1
spinner.Parent = loadingFrame

-- Loading Sequence
coroutine.wrap(function()
    -- Text Typing Animation
    local fullText = "Loading Rin Hub Script..."
    for i = 1, #fullText do
        loadingText.Text = string.sub(fullText, 1, i)
        RunService.Heartbeat:Wait()
    end
    
    -- Fade In Elements
    TS:Create(loadingText, TweenInfo.new(0.5), {TextTransparency = 0}):Play()
    TS:Create(spinner, TweenInfo.new(0.5), {ImageTransparency = 0}):Play()
    
    -- Spinner Rotation
    local spinConnection
    spinConnection = RunService.RenderStepped:Connect(function(dt)
        spinner.Rotation = spinner.Rotation + (dt * 180)
    end)
    
    -- 10-second Loading Duration
    wait(10)
    
    -- Fade Out
    TS:Create(loadingFrame, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
    TS:Create(spinner, TweenInfo.new(0.5), {ImageTransparency = 1}):Play()
    TS:Create(loadingText, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
    
    wait(1)
    loadingGui:Destroy()
    spinConnection:Disconnect()
end)()

-- MAIN GUI --
local gui = Instance.new("ScreenGui")
gui.ResetOnSpawn = false
gui.Name = "RinHubUI"
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Enabled = false
gui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

local main = Instance.new("Frame")
main.Size = UDim2.new(0, 220, 0, 250)
main.Position = UDim2.new(0.5, -110, 0.5, -125)
main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
main.BackgroundTransparency = 1
main.BorderSizePixel = 0
main.ClipsDescendants = true
main.Parent = gui

-- Glass Effect
local blur = Instance.new("BlurEffect")
blur.Size = 10
blur.Parent = main

coroutine.wrap(function()
    wait(10.5) -- Wait for loading screen
    gui.Enabled = true
    
    -- Main Frame Animation
    TS:Create(main, TweenInfo.new(0.8, Enum.EasingStyle.Back), {
        BackgroundTransparency = 0.3,
        Position = UDim2.new(0.5, -110, 0.5, -125)
    }):Play()
    
    -- UI Elements
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(0, 255, 154)
    stroke.Thickness = 2
    stroke.Transparency = 0.1
    stroke.Parent = main

    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, 40)
    header.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    header.BackgroundTransparency = 0.7
    header.Parent = main

    -- Version 5 Title
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -40, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.Text = "RIN HUB v5"  -- UPDATED VERSION TEXT
    title.Font = Enum.Font.GothamBold
    title.TextColor3 = Color3.fromRGB(0, 255, 154)
    title.TextSize = 16
    title.BackgroundTransparency = 1
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header

    -- Version Badge
    local versionBadge = Instance.new("TextLabel")
    versionBadge.Size = UDim2.new(0, 40, 0, 20)
    versionBadge.Position = UDim2.new(1, -45, 0, 5)
    versionBadge.Text = "v5.0"
    versionBadge.Font = Enum.Font.GothamMedium
    versionBadge.TextColor3 = Color3.fromRGB(150, 150, 150)
    versionBadge.TextSize = 12
    versionBadge.BackgroundTransparency = 1
    versionBadge.Parent = header

    -- Close Button
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 30, 0, 30)
    closeBtn.Position = UDim2.new(1, -35, 0.5, -15)
    closeBtn.Text = "Ã—"
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextColor3 = Color3.fromRGB(255, 50, 50)
    closeBtn.TextSize = 24
    closeBtn.BackgroundTransparency = 1
    closeBtn.Parent = header

    -- Modern Toggle Function
    local function createModernToggle(text, yPos)
        local container = Instance.new("Frame")
        container.Size = UDim2.new(1, -20, 0, 30)
        container.Position = UDim2.new(0, 10, 0, yPos)
        container.BackgroundTransparency = 1
        container.Parent = main

        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0.7, 0, 1, 0)
        label.Text = text
        label.Font = Enum.Font.Gotham
        label.TextColor3 = Color3.fromRGB(200, 200, 200)
        label.TextSize = 14
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.BackgroundTransparency = 1
        label.Parent = container

        local toggleFrame = Instance.new("Frame")
        toggleFrame.Size = UDim2.new(0, 50, 0, 25)
        toggleFrame.Position = UDim2.new(1, -50, 0.5, -12.5)
        toggleFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        toggleFrame.Parent = container
        Instance.new("UICorner", toggleFrame).CornerRadius = UDim.new(1, 0)

        local toggleDot = Instance.new("Frame")
        toggleDot.Size = UDim2.new(0, 21, 0, 21)
        toggleDot.Position = UDim2.new(0, 2, 0.5, -10.5)
        toggleDot.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
        toggleDot.Parent = toggleFrame
        Instance.new("UICorner", toggleDot).CornerRadius = UDim.new(1, 0)

        local isToggled = false
        local function updateToggle()
            local newPos = isToggled and UDim2.new(1, -23, 0.5, -10.5) or UDim2.new(0, 2, 0.5, -10.5)
            TS:Create(toggleDot, TweenInfo.new(0.2), {Position = newPos}):Play()
            TS:Create(toggleFrame, TweenInfo.new(0.2), {BackgroundColor3 = isToggled and Color3.fromRGB(0, 255, 154) or Color3.fromRGB(40, 40, 40)}):Play()
        end

        toggleFrame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                isToggled = not isToggled
                updateToggle()
            end
        end)

        return {
            Container = container,
            Toggle = toggleFrame,
            SetState = function(state)
                isToggled = state
                updateToggle()
            end
        }
    end

    -- Add Toggles
    local togglePositions = {
        {"Freeze Trade", 50},
        {"Auto Accept", 90},
        {"Auto Add Items", 130}
    }

    for _, toggleData in ipairs(togglePositions) do
        createModernToggle(toggleData[1], toggleData[2])
    end

    -- Add Best Fruit Button
    local fruitBtn = Instance.new("TextButton")
    fruitBtn.Size = UDim2.new(1, -20, 0, 35)
    fruitBtn.Position = UDim2.new(0, 10, 0, 170)
    fruitBtn.Text = "ADD BEST FRUIT"
    fruitBtn.Font = Enum.Font.GothamBold
    fruitBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    fruitBtn.TextSize = 14
    fruitBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 154)
    fruitBtn.AutoButtonColor = false
    fruitBtn.Parent = main
    Instance.new("UICorner", fruitBtn).CornerRadius = UDim.new(0, 6)

    -- Button Hover Effects
    fruitBtn.MouseEnter:Connect(function()
        TS:Create(fruitBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 200, 120)}):Play()
    end)

    fruitBtn.MouseLeave:Connect(function()
        TS:Create(fruitBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 255, 154)}):Play()
    end)

    -- Button Functionality
    fruitBtn.MouseButton1Click:Connect(function()
        print("Best fruit added!")
        -- Add your functionality here
    end)

    -- Drag Functionality
    local drag = {Enabled = false, Start = nil, StartPosition = nil}

    main.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            drag.Enabled = true
            drag.Start = input.Position
            drag.StartPosition = main.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    drag.Enabled = false
                end
            end)
        end
    end)

    UIS.InputChanged:Connect(function(input)
        if drag.Enabled and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - drag.Start
            main.Position = UDim2.new(
                drag.StartPosition.X.Scale,
                drag.StartPosition.X.Offset + delta.X,
                drag.StartPosition.Y.Scale,
                drag.StartPosition.Y.Offset + delta.Y
            )
        end
    end)

    -- Close Button Functionality
    closeBtn.MouseButton1Click:Connect(function()
        TS:Create(main, TweenInfo.new(0.3), {Size = UDim2.new(0, 0, 0, 0)}):Play()
        wait(0.3)
        gui:Destroy()
    end)
end)()
